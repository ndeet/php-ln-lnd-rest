<?php
/**
 * LnrpcResolutionType
 *
 * PHP version 5
 *
 * @category Class
 * @package  Lnd\Rest
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * rpc.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.8
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Lnd\Rest\Model;
use \Lnd\Rest\ObjectSerializer;

/**
 * LnrpcResolutionType Class Doc Comment
 *
 * @category Class
 * @description - ANCHOR: We resolved an anchor output.  - INCOMING_HTLC: We are resolving an incoming htlc on chain. This if this htlc is claimed, we swept the incoming htlc with the preimage. If it is timed out, our peer swept the timeout path.  - OUTGOING_HTLC: We are resolving an outgoing htlc on chain. If this htlc is claimed, the remote party swept the htlc with the preimage. If it is timed out, we swept it with the timeout path.  - COMMIT: We force closed and need to sweep our time locked commitment output.
 * @package  Lnd\Rest
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LnrpcResolutionType
{
    /**
     * Possible values of this enum
     */
    const TYPE_UNKNOWN = 'TYPE_UNKNOWN';
    const ANCHOR = 'ANCHOR';
    const INCOMING_HTLC = 'INCOMING_HTLC';
    const OUTGOING_HTLC = 'OUTGOING_HTLC';
    const COMMIT = 'COMMIT';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::TYPE_UNKNOWN,
            self::ANCHOR,
            self::INCOMING_HTLC,
            self::OUTGOING_HTLC,
            self::COMMIT,
        ];
    }
}


