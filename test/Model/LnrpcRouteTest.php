<?php
/**
 * LnrpcRouteTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Lnd\Rest
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * rpc.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.8
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Lnd\Rest;

/**
 * LnrpcRouteTest Class Doc Comment
 *
 * @category    Class
 * @description * A path through the channel graph which runs over one or more channels in succession. This struct carries all the information required to craft the Sphinx onion packet, and send the payment along the first hop in the path. A route is only selected as valid if all the channels have sufficient capacity to carry the initial payment amount after fees are accounted for.
 * @package     Lnd\Rest
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class LnrpcRouteTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "LnrpcRoute"
     */
    public function testLnrpcRoute()
    {
    }

    /**
     * Test attribute "totalTimeLock"
     */
    public function testPropertyTotalTimeLock()
    {
    }

    /**
     * Test attribute "totalFees"
     */
    public function testPropertyTotalFees()
    {
    }

    /**
     * Test attribute "totalAmt"
     */
    public function testPropertyTotalAmt()
    {
    }

    /**
     * Test attribute "hops"
     */
    public function testPropertyHops()
    {
    }

    /**
     * Test attribute "totalFeesMsat"
     */
    public function testPropertyTotalFeesMsat()
    {
    }

    /**
     * Test attribute "totalAmtMsat"
     */
    public function testPropertyTotalAmtMsat()
    {
    }
}
